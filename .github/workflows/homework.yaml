name: Full CI/CD Pipeline Homework with Artifacts of sahil thakur

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - '*'
  workflow_dispatch:

env:
  GLOBAL_ENV: "This is a global env var"

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.9

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run build script
        run: |
          mkdir -p output
          echo "Build completed on ${{ matrix.os }}" > output/build_info.txt

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-${{ matrix.os }}
          path: output/

  test:
    name: Unit Tests
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download Ubuntu build artifact
        uses: actions/download-artifact@v4
        with:
          name: build-ubuntu-latest
          path: ./downloaded-artifact

      - name: Run tests
        run: |
          echo "Running tests on downloaded build..."
          pytest tests/

  release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: [build, test]
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: build-ubuntu-latest
          path: ./release-artifact

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v1.0.${{ github.run_number }}
          name: Release v1.0.${{ github.run_number }}
          body: |
            Automated release by GitHub Actions.
            Includes artifact from build.
          files: ./release-artifact/build_info.txt
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: release
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy to server
        run: |
          echo "Deploying to production server..."
          ssh -i ~/.ssh/id_rsa user@prod-server 'bash deploy_script.sh'
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_KEY }}
